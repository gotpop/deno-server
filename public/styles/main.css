@import "https://unpkg.com/open-props";

:root {
  --colour-dark: #333;
  --colour-light: #f4f4f4;
  --colour-primary: #e7b900;

  --padding: 1rem;
  --site-max-width: 1200px;
  --columns-number: 12;

  --site-background-colour: var(--gradient-1);
}

body {
  margin: unset;
}

@view-transition {
  navigation: auto;
}

@function --grid(--site-max-width <length>, --columns-number <integer>) returns
  <grid-template-columns> {
  result: [full-start margin-start] minmax(1rem, 1fr) [margin-end content-start]
    repeat(
      12,
      [col-start]
        minmax(auto, calc(var(--site-max-width) / var(--columns-number)))
        [col-end]
    )
    [content-end margin-start] minmax(1rem, 1fr) [margin-end full-end];
}

@function --grid-row-base(--gap-one: 1rem, --gap-two: 2rem) {
  result: [header] min-content [main] 1fr [footer] min-content;
}

/* :not(.application, .header):defined :not(:defined) {
  visibility: hidden;
} */

:not(.application, .header):is(
    [is],
    :not(
        :where(
            a,
            div,
            span,
            p,
            h1,
            h2,
            h3,
            h4,
            h5,
            h6,
            ul,
            li,
            section,
            article,
            header,
            footer,
            main,
            nav,
            aside,
            figure,
            figcaption,
            img,
            button,
            input,
            form,
            textarea,
            select,
            option,
            label,
            table,
            tr,
            td,
            th,
            thead,
            tbody,
            video,
            audio,
            iframe
          )
      )
  ):defined
  :not(:defined) {
  visibility: hidden;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

not(.application, .header):defined {
  animation: fadeIn 0.3s ease-in-out;
}

* {
  box-sizing: border-box;

  &:before,
  &:after {
    box-sizing: inherit;
  }
}

a,
button,
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Roboto", sans-serif;
  text-box: trim-both cap alphabetic;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  margin-block-end: 1rem;
}

.application {
  display: grid;
  row-gap: 1rem;
  grid-template-rows: --grid-row-base();
  grid-template-columns: --grid(1200px, 12);
  min-height: 100dvh;
  background: var(--site-background-colour);
  view-transition-name: attr(id type(<custom-ident>), none);
}

@function --lighten(--color <color>, --factor <number>) returns <color> {
  result: oklch(from var(--color) calc(l * var(--factor)) c h);
}

.header {
  --color-dark: var(--colour-dark);

  background-color: --lighten(var(--color-dark), 2.5);
  color: var(--colour-light);
  display: grid;
  grid-column: full;
  grid-row: header;
  grid-template-columns: subgrid;
  position: sticky;
  top: 0;
  view-transition-name: attr(id type(<custom-ident>), none);
}

.nav {
  display: grid;
  grid-column: content;
  padding: 0;
}

.menubar {
  display: flex;
  margin: 0;
  padding: 0;
  width: 100%;
  padding: var(--padding);
  gap: var(--padding);
  justify-content: center;
}

.menuitem {
  color: var(--colour-light);
  display: flex;

  a {
    text-align: center;
    padding: var(--padding);
    background-color: var(--colour-dark);
    text-decoration: none;
    color: var(--colour-light);
    background-color: var(--colour-dark);

    &:hover {
      color: var(--colour-primary);
    }
  }
}

site-hero::part(heading) {
  font-size: 20rem;
  background-color: aqua;
}
